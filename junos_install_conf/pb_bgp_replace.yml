---
 - name: create a directory
   hosts: localhost
   gather_facts: no
 
   tasks:

   - name: create and push the directory render
     file: 
       path: "{{playbook_dir}}/render" 
       state: directory

 - name: create BGP junos configuration
   hosts: EX4200
   connection: local
   gather_facts: no
   roles:
   - Juniper.junos

   tasks:

   - name: Retrieve information from devices running Junos
     junos_get_facts:
      host: "{{ junos_host }}"
      user: "{{ ADMUSER }}"
      passwd: "{{ ADMPASS }}"
     register: junos

   - name: Print some facts
     debug: 
       msg: "device {{junos.facts.hostname}} is a {{ junos.facts.model }} running version {{junos.facts.version}}" 

   - name: Render BGP configuration for junos devices
     template: 
       src: "{{playbook_dir}}/replacebgp.j2" 
       dest: "{{playbook_dir}}/render/{{ inventory_hostname }}.conf"

   - name: Collect Pre Snapshot
     junos_jsnapy:
       host: "{{ junos_host }}"
       user: "{{ credentials.username }}"
       passwd: "{{ credentials.password }}"
       action: "snap_pre"
       test_files: "{{playbook_dir}}/test_file_check_bgp_states.yml"

   - name: Install configuration to devices running Junos
     junos_install_config:
      host: "{{ junos_host }}"
      user: "{{ ADMUSER }}"
      passwd: "{{ ADMPASS }}"
      replace: yes
      overwrite: no
      file: "{{playbook_dir}}/render/{{ inventory_hostname }}.conf"
      comment: "configured by ansible"

   - name: Collect Post Snapshot
     junos_jsnapy:
       host: "{{ junos_host }}"
       user: "{{ credentials.username }}"
       passwd: "{{ credentials.password }}"
       action: "snap_post"
       test_files:  "{{playbook_dir}}/test_file_check_bgp_states.yml"

   - name: check bgp peers states
     junos_command:
      provider: "{{  credentials }}"
      commands:
       - show bgp neighbor "{{ item.peer_ip }}"
      display: 'xml'
      waitfor:
      - "result[0]['rpc-reply']['bgp-information']['bgp-peer']['peer-state'] == Established"
      retries: 15
      interval: 2
     with_items:
     - "{{ neighbors }}"
     when: ansible_version['major'] == 2 and ansible_version['minor']|int >= 4

   - name: Compare snapshots
     junos_jsnapy:
       host: "{{ junos_host }}"
       user: "{{ credentials.username }}"
       passwd: "{{ credentials.password }}"
       action: "check"
       test_files:  "{{playbook_dir}}/test_file_check_bgp_states.yml"
     register: test_check

   - name: Check JSNAPy tests results
     assert:
       that:
       - "test_check.passPercentage == 100"
       msg: "jsnapy test on {{ inventory_hostname }} failed"

